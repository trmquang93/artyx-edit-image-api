# Optimized Dockerfile for RunPod Network Volume Usage
FROM pytorch/pytorch:2.1.0-cuda12.1-cudnn8-runtime

# Set working directory
WORKDIR /app

# Environment variables for non-interactive installation and network volume paths
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1

# CRITICAL: Use network volume for all model caches to avoid disk space issues
ENV TORCH_HOME=/runpod-volume/.torch
ENV HF_HOME=/runpod-volume/.huggingface
ENV TRANSFORMERS_CACHE=/runpod-volume/.transformers

# Pre-configure timezone to prevent interactive prompts
RUN echo 'tzdata tzdata/Areas select Etc' | debconf-set-selections && \
    echo 'tzdata tzdata/Zones/Etc select UTC' | debconf-set-selections

# Install system dependencies with aggressive cleanup
RUN apt-get update && apt-get install -y \
    tzdata \
    git \
    curl \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Copy requirements and install Python dependencies
COPY requirements.txt .

# Install Python packages with aggressive cleanup
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir \
        accelerate \
        safetensors \
        invisible-watermark && \
    pip cache purge && \
    find /opt/conda -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true

# Copy application code
COPY . .

# Note: Cache directories are created at runtime on network volume
# This prevents build-time disk usage and enables persistence

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/health || exit 1

# Default command - RunPod worker with network volume support
CMD ["python", "runpod_worker.py"]